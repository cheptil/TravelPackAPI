#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è API Avis –±–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
–ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ endpoints –∏ –∏—Ö –æ—Ç–≤–µ—Ç—ã
"""

import requests
import json

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è API
BASE_URL = "https://stage.abgapiservices.com"
LOCATIONS_ENDPOINT = f"{BASE_URL}/cars/locations/v1/"

def test_endpoint_without_auth():
    """
    –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ endpoint –±–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    """
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –±–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏...")
    
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞
    params = {
        'country_code': 'US',
        'brand': 'Avis',
        'keyword': 'Denver'
    }
    
    try:
        print(f"üìç –ó–∞–ø—Ä–æ—Å –∫: {LOCATIONS_ENDPOINT}")
        print(f"üìã –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: {params}")
        
        response = requests.get(LOCATIONS_ENDPOINT, params=params)
        print(f"üì° –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        print(f"üìÑ –ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞: {dict(response.headers)}")
        
        if response.text:
            print(f"üìù –¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞: {response.text}")
            
            try:
                data = response.json()
                return data
            except json.JSONDecodeError:
                print("‚ö†Ô∏è –û—Ç–≤–µ—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –≤–∞–ª–∏–¥–Ω—ã–º JSON")
                return response.text
        else:
            print("üì≠ –ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç")
            return None
            
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ: {e}")
        return None

def test_base_url():
    """
    –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–≥–æ URL
    """
    print("\nüåê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–≥–æ URL...")
    
    try:
        response = requests.get(BASE_URL)
        print(f"üì° –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        print(f"üìÑ –ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞: {dict(response.headers)}")
        
        if response.text:
            print(f"üìù –¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞ (–ø–µ—Ä–≤—ã–µ 500 —Å–∏–º–≤–æ–ª–æ–≤): {response.text[:500]}")
        
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ –±–∞–∑–æ–≤–æ–º—É URL: {e}")

def test_oauth_endpoint():
    """
    –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ OAuth endpoint –±–µ–∑ —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    """
    print("\nüîê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ OAuth endpoint...")
    
    oauth_url = f"{BASE_URL}/oauth/token/v1"
    
    try:
        response = requests.get(oauth_url)
        print(f"üì° –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        
        if response.text:
            print(f"üìù –û—Ç–≤–µ—Ç: {response.text}")
            
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ OAuth: {e}")

def explore_api_structure():
    """
    –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã API
    """
    print("\nüî¨ –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã API...")
    
    # –°–ø–∏—Å–æ–∫ –≤–æ–∑–º–æ–∂–Ω—ã—Ö endpoints –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    endpoints_to_test = [
        "/cars/locations/v1/",
        "/cars/availability/v1/",
        "/cars/reservation/v1/",
        "/cars/terms_and_conditions/v1/",
        "/cars/",
        "/api/",
        "/docs/",
        "/swagger/",
        "/openapi/"
    ]
    
    for endpoint in endpoints_to_test:
        url = f"{BASE_URL}{endpoint}"
        try:
            response = requests.get(url, timeout=5)
            print(f"üìç {endpoint}: {response.status_code}")
            
            if response.status_code not in [404, 500]:
                print(f"   üìÑ Content-Type: {response.headers.get('content-type', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
                if response.text and len(response.text) < 200:
                    print(f"   üìù –û—Ç–≤–µ—Ç: {response.text}")
                    
        except Exception as e:
            print(f"üìç {endpoint}: ‚ùå {e}")

def main():
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
    """
    print("üîç –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ API Avis –±–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏")
    print("=" * 60)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–∞–∑–æ–≤—ã–π URL
    test_base_url()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º OAuth endpoint
    test_oauth_endpoint()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π endpoint –±–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    result = test_endpoint_without_auth()
    
    # –ò—Å—Å–ª–µ–¥—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É API
    explore_api_structure()
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    if result:
        with open('/home/ubuntu/api_test_result.json', 'w', encoding='utf-8') as f:
            if isinstance(result, dict):
                json.dump(result, f, indent=2, ensure_ascii=False)
            else:
                f.write(str(result))
        print("\nüíæ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ api_test_result.json")
    
    print("\n" + "=" * 60)
    print("‚úÖ –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")

if __name__ == "__main__":
    main()

